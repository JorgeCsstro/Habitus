/* habitus.css - Habitus room editor specific styles */

/* Main content container */
.habitus-content {
    flex: 1;
    padding: 20px;
    background-color: var(--bg-primary);
    overflow-y: auto;
}

/* Header section */
.habitus-header {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 20px;
}

.room-selector {
    display: flex;
    align-items: center;
    gap: 10px;
}

.room-selector select {
    padding: 10px 15px;
    border: 1px solid var(--border-primary);
    border-radius: 25px;
    font-size: 1rem;
    background-color: var(--bg-panel);
    color: var(--text-primary);
    cursor: pointer;
    min-width: 200px;
}

.new-room-btn, .rename-room-btn {
    padding: 8px 15px;
    border-radius: 20px;
    background-color: var(--bg-secondary);
    color: var(--secondary);
    border: 1px solid var(--border-primary);
    cursor: pointer;
    font-weight: 500;
    transition: all 0.3s;
}

.new-room-btn:hover, .rename-room-btn:hover {
    background-color: var(--border-primary);
    border-color: var(--primary-light);
}

.room-actions {
    display: flex;
    gap: 10px;
}

.save-room-btn {
    padding: 10px 20px;
    border-radius: 25px;
    background-color: var(--success);
    color: var(--btn-text);
    border: none;
    cursor: pointer;
    font-weight: 600;
    transition: all 0.3s;
}

.save-room-btn:hover:not(:disabled) {
    background-color: var(--secondary);
    transform: translateY(-2px);
    box-shadow: 0 4px 10px var(--shadow);
}

.save-room-btn:disabled {
    background-color: var(--border-primary);
    color: var(--text-secondary);
    cursor: not-allowed;
}

.clear-room-btn {
    padding: 10px 20px;
    border-radius: 25px;
    background-color: var(--bg-secondary);
    color: var(--error);
    border: 1px solid var(--border-primary);
    cursor: pointer;
    font-weight: 500;
    transition: all 0.3s;
}

.clear-room-btn:hover {
    background-color: var(--bg-panel);
    border-color: var(--error);
}

/* Editor layout */
.habitus-editor {
    display: flex;
    gap: 20px;
    height: calc(100vh - 200px);
}

/* Room container */
.room-container {
    flex: 1;
    background-color: var(--bg-panel);
    border-radius: 15px;
    box-shadow: 0 5px 15px var(--shadow);
    padding: 40px;
    position: relative;
    overflow: hidden;
    border: 1px solid var(--border-primary);
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Isometric room container - Enhanced for 6x6 grid */
.isometric-room {
    position: relative;
    width: 700px;
    height: 700px;
}

/* Room base (floor + walls container) */
.room-base {
    position: absolute;
    width: 360px;
    height: 360px;
    top: 200px;
    left: 170px;
    transform: rotateX(60deg) rotateZ(-45deg);
    transform-style: preserve-3d;
}

/* Room floor - 6x6 grid */
.room-floor {
    position: absolute;
    width: 100%;
    height: 100%;
    background: var(--accent);
    background-image: 
        linear-gradient(rgba(0,0,0,0.02) 1px, transparent 1px),
        linear-gradient(90deg, rgba(0,0,0,0.02) 1px, transparent 1px);
    background-size: 60px 60px;
    background-position: -1px -1px;
    box-shadow: 0 2px 10px var(--shadow);
}

/* Left wall */
.room-wall-left {
    position: absolute;
    width: 100%;
    height: 67%;
    background: linear-gradient(to bottom, #E0E0E0, #D0D0D0);
    transform: rotateX(90deg);
    transform-origin: top;
    box-shadow: inset 0 0 30px rgba(0,0,0,0.1);
}

/* Right wall */
.room-wall-right {
    position: absolute;
    width: 67%;
    height: 100%;
    background: linear-gradient(to left, #D0D0D0, #C0C0C0);
    transform: rotateY(-90deg) translateZ(-359px);
    transform-origin: left;
    box-shadow: inset 0 0 30px rgba(0,0,0,0.15);
}

/* Door on left wall */
.room-door {
    position: absolute;
    width: 60px;
    height: 120px;
    background: linear-gradient(to bottom, #8B6347, #654321);
    left: 60px;
    bottom: 0;
    transform: rotateX(-90deg) translateZ(-360px);
    transform-origin: bottom;
    box-shadow: inset 0 0 10px rgba(0,0,0,0.3);
    z-index: 10;
}

.room-door::before {
    content: '';
    position: absolute;
    width: 8px;
    height: 8px;
    background: #c4923e;
    border-radius: 50%;
    right: 10px;
    top: 60px;
    box-shadow: 0 0 5px #c4923e;
}

/* Door mat/entrance area on floor */
.room-floor::after {
    content: '';
    position: absolute;
    width: 60px;
    height: 60px;
    background: rgba(139, 99, 71, 0.3);
    border: 2px dashed rgba(139, 99, 71, 0.5);
    left: 60px;
    top: 0;
    pointer-events: none;
}

/* Grid overlays */
.room-grid-floor,
.room-grid-wall-left,
.room-grid-wall-right {
    position: absolute;
    pointer-events: none;
    display: none;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.room-grid-floor {
    width: 360px;
    height: 360px;
    transform: rotateX(60deg) rotateZ(-45deg);
    top: 200px;
    left: 170px;
}

.room-grid-wall-left {
    width: 360px;
    height: 240px;
    transform: rotateX(60deg) rotateZ(-45deg) rotateX(-90deg);
    transform-origin: top;
    top: 109px;
    left: 42px;
}

.room-grid-wall-right {
    width: 240px;
    height: 360px;
    transform: rotateX(60deg) rotateZ(-45deg) rotateY(-90deg) translateZ(-360px);
    transform-origin: left;
    top: 264px;
    left: 222px;
}

/* Show grids when dragging */
.isometric-room.dragging .room-grid-floor,
.isometric-room.dragging .room-grid-wall-left,
.isometric-room.dragging .room-grid-wall-right {
    display: block;
    opacity: 0.8;
    pointer-events: all;
}

.isometric-room.dragging .grid-cell {
    border-color: var(--success);
    transition: all 0.15s ease;
}

.isometric-room.dragging .grid-cell:hover:not(.drag-over):not(.drag-invalid) {
    background-color: rgba(106, 141, 127, 0.1);
    border-color: var(--success);
}

/* Manual grid toggle */
.isometric-room.grid-visible .room-grid-floor,
.isometric-room.grid-visible .room-grid-wall-left,
.isometric-room.grid-visible .room-grid-wall-right {
    display: block;
    opacity: 0.5;
    pointer-events: all;
}

/* Grid cells */
.grid-cell {
    position: absolute;
    width: 60px;
    height: 60px;
    border: 1px solid rgba(0, 0, 0, 0.1);
    pointer-events: all;
    transition: all 0.15s;
    cursor: pointer;
}

.grid-cell:hover {
    background-color: rgba(106, 141, 127, 0.3);
    border-color: var(--success);
    z-index: 100;
}

.grid-cell.drag-over {
    background-color: rgba(106, 141, 127, 0.4);
    border-color: var(--success);
    box-shadow: 0 0 15px var(--success);
    z-index: 101;
    animation: dragOverGlow 1s infinite ease-in-out;
}

@keyframes dragOverGlow {
    0%, 100% { 
        background-color: rgba(106, 141, 127, 0.4);
        box-shadow: 0 0 15px var(--success);
    }
    50% { 
        background-color: rgba(106, 141, 127, 0.6);
        box-shadow: 0 0 20px var(--success);
    }
}

.grid-cell.drag-invalid {
    background-color: rgba(161, 92, 92, 0.4);
    border-color: var(--error);
    box-shadow: 0 0 15px var(--error);
    z-index: 101;
    animation: dragInvalidPulse 0.3s ease-in-out infinite alternate;
}

@keyframes dragInvalidPulse {
    0% { 
        background-color: rgba(161, 92, 92, 0.4);
        box-shadow: 0 0 15px var(--error);
    }
    100% { 
        background-color: rgba(161, 92, 92, 0.6);
        box-shadow: 0 0 20px var(--error);
    }
}

.grid-cell.non-placeable {
    background-color: rgba(0, 0, 0, 0.1);
    pointer-events: none;
    cursor: not-allowed;
}

/* Placed items containers for each surface */
.placed-items-floor {
    position: absolute;
    width: 360px;
    height: 360px;
    pointer-events: none;
    transform: rotateX(60deg) rotateZ(315deg);
    top: 195px;
    left: 170px;
}

.placed-items-wall-left {
    position: absolute;
    width: 360px;
    height: 240px;
    pointer-events: none;
    transform: rotateX(60deg) rotateZ(-45deg) rotateX(-90deg);
    transform-origin: top;
    top: 110px;
    left: 40px;
}

.placed-items-wall-right {
    position: absolute;
    width: 240px;
    height: 360px;
    pointer-events: none;
    transform: rotateX(60deg) rotateZ(-45deg) rotateY(-90deg) translateZ(-360px);
    transform-origin: left;
    top: 264px;
    left: 222px;
}

.placed-item.operation-success {
    animation: operationSuccess 0.6s ease-out forwards;
}

@keyframes operationSuccess {
    0% { transform: scale(1); }
    50% { 
        transform: scale(1.05);
        filter: brightness(1.2) drop-shadow(0 0 15px var(--success));
    }
    100% { 
        transform: scale(1);
        filter: brightness(1) drop-shadow(0 2px 8px var(--shadow));
    }
}

.placed-item {
    position: absolute;
    pointer-events: all;
    cursor: move;
    transition: filter 0.2s, transform 0.3s;
    transform-style: preserve-3d;
}

.placed-item img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    display: block;
    user-select: none;
    -webkit-user-drag: none;
}

/* Floor items - counter the isometric transform */
.placed-items-floor .placed-item img {
    transform: rotateZ(40deg) rotateY(55deg) rotateX(0deg) rotate(5deg) scale(2);   
    translate: 10px -15px;
}

/* Right wall items */
.placed-items-wall-right .placed-item img {
    transform: rotateZ(165deg) rotateX(105deg) rotate(-135deg) rotateY(280deg) scale(1.4);
}

.placed-item:hover {
    filter: brightness(1.1) drop-shadow(0 4px 12px var(--shadow));
    z-index: 1000;
}

.placed-item.selected {
    filter: drop-shadow(0 0 15px var(--success));
    z-index: 1001;
}

.placed-item.selected::before {
    content: '';
    position: absolute;
    top: -4px;
    left: -4px;
    right: -4px;
    bottom: -4px;
    border: 2px solid var(--success);
    border-radius: 4px;
    pointer-events: none;
}

.placed-item.dragging {
    opacity: 0.3;
    pointer-events: none;
    filter: grayscale(0.5);
    transform: scale(0.95);
    z-index: 9998;
}

.placed-item.dragging img {
    filter: brightness(0.7);
}

/* Drag preview */
.drag-preview {
    position: absolute;
    pointer-events: none;
    opacity: 0.8;
    z-index: 9999;
    display: none;
    transition: none;
}

.drag-preview img,
.drag-preview-image {
    width: 100%;
    height: 100%;
    object-fit: contain;
    display: block;
    user-select: none;
    -webkit-user-drag: none;
}

.drag-preview-floor img,
.drag-preview-floor .drag-preview-image {
    transform: rotateZ(40deg) rotateY(55deg) rotateX(0deg) rotate(5deg) scale(2);   
    translate: 10px -15px;
}

.drag-preview-wall-left img,
.drag-preview-wall-left .drag-preview-image {
    transform: rotateZ(40deg) rotateY(55deg) rotateX(0deg) rotate(5deg) scale(1.8);   
    translate: 5px -10px;
}

.drag-preview-wall-right img,
.drag-preview-wall-right .drag-preview-image {
    transform: rotateZ(165deg) rotateX(105deg) rotate(-135deg) rotateY(280deg) scale(1.4);
}

.drag-preview.invalid-drop img,
.drag-preview.invalid-drop .drag-preview-image {
    filter: grayscale(0.7) brightness(0.6) sepia(1) hue-rotate(0deg) saturate(3);
    animation: invalidPulse 0.5s ease-in-out infinite alternate;
}

@keyframes invalidPulse {
    0% { opacity: 0.3; }
    100% { opacity: 0.6; }
}

/* Room controls */
.room-controls {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 10px;
    background: var(--bg-panel);
    padding: 10px;
    border-radius: 25px;
    box-shadow: 0 2px 10px var(--shadow);
    align-items: center;
}

.room-controls button {
    padding: 8px 15px;
    border: 1px solid var(--border-primary);
    border-radius: 20px;
    background: var(--bg-secondary);
    color: var(--text-secondary);
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 5px;
    transition: all 0.2s;
}

.room-controls button:hover {
    background: var(--border-primary);
    color: var(--text-primary);
}

.room-controls button img {
    width: 16px;
    height: 16px;
}

.surface-info {
    font-size: 0.85rem;
    color: var(--text-secondary);
    font-style: italic;
    margin-left: 10px;
}

/* Inventory panel */
.room-inventory {
    width: 300px;
    background-color: var(--bg-panel);
    border-radius: 15px;
    box-shadow: 0 5px 15px var(--shadow);
    border: 1px solid var(--border-primary);
    display: flex;
    flex-direction: column;
    overflow: hidden;
}

.room-inventory h3 {
    padding: 15px;
    margin: 0;
    background-color: var(--bg-secondary);
    border-bottom: 1px solid var(--border-primary);
    font-size: 1.2rem;
    color: var(--text-primary);
    font-family: 'Quicksand', sans-serif;
}

.inventory-toggle {
    display: none;
}

.inventory-filters {
    display: flex;
    padding: 10px;
    gap: 5px;
    background-color: var(--bg-primary);
    border-bottom: 1px solid var(--border-primary);
    flex-wrap: wrap;
}

.filter-btn {
    padding: 5px 12px;
    border: 1px solid var(--border-primary);
    border-radius: 15px;
    background-color: var(--bg-panel);
    color: var(--text-secondary);
    font-size: 0.85rem;
    cursor: pointer;
    transition: all 0.2s;
}

.filter-btn:hover {
    background-color: var(--bg-secondary);
}

.filter-btn.active {
    background-color: var(--secondary);
    color: var(--btn-text);
    border-color: var(--secondary);
}

.inventory-items {
    flex: 1;
    overflow-y: auto;
    padding: 15px;
}

.inventory-item {
    display: flex;
    align-items: center;
    padding: 10px;
    border-radius: 8px;
    background-color: var(--bg-primary);
    border: 1px solid var(--border-primary);
    margin-bottom: 10px;
    cursor: grab;
    transition: all 0.2s;
    position: relative;
}

.inventory-item:hover:not(.disabled) {
    background-color: var(--bg-secondary);
    transform: translateY(-2px);
    box-shadow: 0 2px 8px var(--shadow);
}

.inventory-item:active:not(.disabled) {
    cursor: grabbing;
}

.inventory-item.disabled {
    background-color: var(--bg-secondary);
    border-color: var(--border-primary);
    cursor: not-allowed;
    opacity: 0.3;
    pointer-events: none;
}

.inventory-item.disabled::after {
    content: 'USED';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: var(--error);
    color: var(--btn-text);
    padding: 2px 8px;
    border-radius: 12px;
    font-size: 0.7rem;
    font-weight: 600;
    white-space: nowrap;
    z-index: 1000;
}

.inventory-item img {
    width: 40px;
    height: 40px;
    object-fit: contain;
    margin-right: 10px;
    user-select: none;
    -webkit-user-drag: none;
}

.item-info {
    flex: 1;
}

.item-name {
    font-weight: 500;
    color: var(--text-primary);
    font-size: 0.95rem;
}

.item-quantity {
    font-size: 0.8rem;
    color: var(--text-secondary);
}

.item-size-badge {
    position: absolute;
    top: 5px;
    right: 5px;
    background: var(--primary);
    color: var(--btn-text);
    padding: 2px 6px;
    border-radius: 3px;
    font-size: 0.7rem;
    font-weight: 600;
}

.rotation-indicator {
    position: absolute;
    top: 5px;
    left: 5px;
    width: 16px;
    height: 16px;
    background: var(--success);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.rotation-indicator img {
    width: 10px;
    height: 10px;
    filter: brightness(0) invert(1);
}

.item-surface-badge {
    position: absolute;
    bottom: 5px;
    right: 5px;
    display: flex;
    gap: 2px;
}

.surface-icon {
    width: 14px;
    height: 14px;
    background: var(--bg-secondary);
    border-radius: 2px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 10px;
    font-weight: bold;
}

.surface-icon.floor { 
    background: var(--accent); 
    color: var(--primary); 
}
.surface-icon.wall { 
    background: var(--bg-secondary); 
    color: var(--text-secondary); 
}

.empty-inventory {
    text-align: center;
    padding: 30px 20px;
    color: var(--text-secondary);
    font-style: italic;
}

.inventory-actions {
    padding: 15px;
    border-top: 1px solid var(--border-primary);
    background-color: var(--bg-secondary);
}

.shop-btn {
    display: block;
    width: 100%;
    padding: 10px;
    background-color: var(--secondary);
    color: var(--btn-text);
    text-align: center;
    text-decoration: none;
    border-radius: 20px;
    font-weight: 500;
    transition: all 0.3s;
}

.shop-btn:hover {
    background-color: var(--primary-light);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px var(--shadow);
}

/* Hold-to-drag system */
.hold-to-drag-indicator {
    position: fixed;
    width: 60px;
    height: 60px;
    border-radius: 50%;
    background: rgba(0, 0, 0, 0.8);
    display: none;
    z-index: 10000;
    pointer-events: none;
    border: 3px solid var(--success);
}

.hold-to-drag-indicator::before {
    content: '';
    position: absolute;
    top: 5px;
    left: 5px;
    right: 5px;
    bottom: 5px;
    border: 3px solid transparent;
    border-top: 3px solid var(--success);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.hold-progress {
    position: absolute;
    top: 3px;
    left: 3px;
    right: 3px;
    bottom: 3px;
    border-radius: 50%;
    background: conic-gradient(var(--success) 0deg, transparent 0deg);
    transition: none;
}

.placed-item.being-held {
    z-index: 9999;
    pointer-events: none;
    opacity: 0.9;
    filter: brightness(1.1) drop-shadow(0 8px 25px var(--shadow));
    transition: all 0.2s ease;
}

.placed-item.being-held img {
    transform: none;
    translate: none;
    scale: 1;
}

.placed-item.being-held::before {
    content: '';
    position: absolute;
    top: -8px;
    left: -8px;
    right: -8px;
    bottom: -8px;
    border: 3px solid var(--success);
    border-radius: 8px;
    background: rgba(106, 141, 127, 0.1);
    animation: heldItemGlow 1.5s infinite ease-in-out;
    pointer-events: none;
}

@keyframes heldItemGlow {
    0%, 100% { 
        opacity: 0.3;
        border-color: var(--success);
        box-shadow: 0 0 15px var(--success);
    }
    50% { 
        opacity: 0.7;
        border-color: var(--secondary);
        box-shadow: 0 0 25px var(--success);
    }
}

/* Floating action menu */
.floating-action-menu {
    position: fixed;
    background: var(--bg-panel);
    backdrop-filter: blur(10px);
    border-radius: 12px;
    box-shadow: 0 8px 32px var(--shadow);
    border: 2px solid var(--success);
    padding: 8px;
    display: none;
    flex-direction: column;
    gap: 4px;
    z-index: 10001;
    min-width: 140px;
    animation: fadeInSlide 0.3s ease-out;
}

.floating-action-menu.show {
    display: flex;
}

@keyframes fadeInSlide {
    from {
        opacity: 0;
        transform: translateX(-20px) scale(0.9);
    }
    to {
        opacity: 1;
        transform: translateX(0) scale(1);
    }
}

.floating-action-menu .menu-button {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 10px 12px;
    border: none;
    background: transparent;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 0.9rem;
    font-weight: 500;
    color: var(--text-primary);
    text-align: left;
    width: 100%;
}

.floating-action-menu .menu-button:hover {
    background: rgba(106, 141, 127, 0.1);
    color: var(--success);
    transform: translateX(2px);
}

.floating-action-menu .menu-button.rotate::before {
    content: '↻';
    font-size: 16px;
    margin-right: 4px;
}

.floating-action-menu .menu-button.front::before {
    content: '⬆';
    font-size: 14px;
    margin-right: 4px;
}

.floating-action-menu .menu-button.back::before {
    content: '⬇';
    font-size: 14px;
    margin-right: 4px;
}

.floating-action-menu .menu-button.remove {
    color: var(--error);
    border-top: 1px solid var(--error);
    margin-top: 4px;
    padding-top: 12px;
}

.floating-action-menu .menu-button.remove:hover {
    background: rgba(161, 92, 92, 0.1);
    color: var(--error);
}

.floating-action-menu .menu-button.remove::before {
    content: '✕';
    font-size: 14px;
    margin-right: 4px;
}

/* Flying item state */
.placed-item.flying {
    opacity: 0.6;
    filter: grayscale(0.3);
    animation: float 2s ease-in-out infinite alternate;
    border: 2px dashed var(--warning);
    background: rgba(196, 146, 62, 0.1);
}

.placed-item.flying::after {
    content: 'INVALID POSITION';
    position: absolute;
    top: -25px;
    left: 50%;
    transform: translateX(-50%);
    background: var(--warning);
    color: var(--btn-text);
    padding: 2px 8px;
    border-radius: 12px;
    font-size: 0.7rem;
    font-weight: 600;
    white-space: nowrap;
    z-index: 1000;
}

@keyframes float {
    from { transform: translateY(0px); }
    to { transform: translateY(-5px); }
}

/* Flying items warning */
.flying-items-warning {
    position: fixed;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    background: var(--warning);
    color: var(--btn-text);
    padding: 10px 15px;
    border-radius: 8px;
    font-weight: 600;
    z-index: 10000;
    display: none;
    align-items: center;
    gap: 8px;
    box-shadow: 0 4px 12px var(--shadow);
}

.flying-items-warning.show {
    display: flex;
    animation: slideDown 0.3s ease-out;
}

@keyframes slideDown {
    from {
        opacity: 0;
        transform: translateX(-50%) translateY(-20px);
    }
    to {
        opacity: 1;
        transform: translateX(-50%) translateY(0);
    }
}

.flying-items-warning::before {
    content: '⚠';
    font-size: 1.2rem;
}

/* Habitus-specific modals */
.modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--shadow);
    z-index: 10000;
    justify-content: center;
    align-items: center;
}

.modal-content {
    background: var(--bg-panel);
    border-radius: 15px;
    padding: 25px;
    width: 90%;
    max-width: 400px;
    box-shadow: 0 10px 30px var(--shadow);
}

.modal-content h3 {
    margin: 0 0 20px 0;
    color: var(--text-primary);
    font-family: 'Quicksand', sans-serif;
}

.form-group {
    margin-bottom: 20px;
}

.form-group label {
    display: block;
    margin-bottom: 8px;
    color: var(--text-secondary);
    font-weight: 500;
}

.form-group input {
    width: 100%;
    padding: 10px 15px;
    border: 1px solid var(--border-primary);
    border-radius: 8px;
    font-size: 1rem;
    background-color: var(--input-bg);
    color: var(--input-text);
}

.modal-actions {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
}

.cancel-btn {
    padding: 10px 20px;
    background-color: var(--bg-secondary);
    color: var(--text-secondary);
    border: 1px solid var(--border-primary);
    border-radius: 20px;
    cursor: pointer;
    transition: all 0.3s;
}

.cancel-btn:hover {
    background-color: var(--border-primary);
}

.save-btn {
    padding: 10px 20px;
    background-color: var(--success);
    color: var(--btn-text);
    border: none;
    border-radius: 20px;
    cursor: pointer;
    transition: all 0.3s;
}

.save-btn:hover {
    background-color: var(--secondary);
}

/* Responsive */
@media (max-width: 1200px) {
    .habitus-editor {
        flex-direction: column;
        height: 500px;
        position: relative;
    }
    
    .room-container {
        height: 700px;
    }
    
    .room-inventory {
        width: 90%;
        position: fixed;
        bottom: 0;
        left: 50%;
        /* START POSITION: Hidden except for header (60px visible) */
        transform: translateX(-50%) translateY(calc(100% - 60px));
        border-radius: 15px 15px 0 0;
        z-index: 1000;
        max-height: 50vh;
        box-shadow: 0 -5px 20px var(--shadow);
        
        /* ENHANCED SMOOTH SLIDE ANIMATION */
        transition: transform 0.5s cubic-bezier(0.4, 0.0, 0.2, 1);
        will-change: transform; /* Optimize for animations */
    }

    /* OPEN STATE: Slide up to full visibility */
    .room-inventory.show {
        transform: translateX(-50%) translateY(0);
    }
    
    /* Add subtle bounce effect when opening */
    .room-inventory.show {
        animation: slideUpBounce 0.5s cubic-bezier(0.4, 0.0, 0.2, 1) forwards;
    }
    
    @keyframes slideUpBounce {
        0% {
            transform: translateX(-50%) translateY(calc(100% - 60px));
        }
        70% {
            transform: translateX(-50%) translateY(-5px);
        }
        100% {
            transform: translateX(-50%) translateY(0);
        }
    }
    
    /* Clickable header with better visual feedback */
    .room-inventory h3 {
        cursor: pointer;
        position: relative;
        transition: all 0.3s ease;
        user-select: none;
        display: flex;
        align-items: center;
        justify-content: space-between;
        background: var(--bg-secondary);
        border-bottom: 1px solid var(--border-primary);
    }
    
    .room-inventory h3:hover {
        background-color: var(--primary);
        color: var(--btn-text);
        transform: translateY(-1px);
    }
    
    /* Improved arrow animation */
    .room-inventory h3::after {
        content: '▲';
        font-size: 1rem;
        transition: transform 0.4s cubic-bezier(0.4, 0.0, 0.2, 1);
        transform: rotate(180deg); /* Points down when closed */
        opacity: 0.7;
    }
    
    .room-inventory.show h3::after {
        transform: rotate(0deg); /* Points up when open */
        opacity: 1;
    }
    
    /* Content fade and slide animation */
    .room-inventory .inventory-items,
    .room-inventory .inventory-filters,
    .room-inventory .inventory-actions {
        transition: all 0.3s ease;
        transform: translateY(10px);
    }
    
    /* Hidden state content */
    .room-inventory:not(.show) .inventory-items,
    .room-inventory:not(.show) .inventory-filters,
    .room-inventory:not(.show) .inventory-actions {
        opacity: 0;
        pointer-events: none;
        transform: translateY(20px);
    }
    
    /* Visible state content */
    .room-inventory.show .inventory-items,
    .room-inventory.show .inventory-filters,
    .room-inventory.show .inventory-actions {
        opacity: 1;
        pointer-events: all;
        transform: translateY(0);
    }
    
    /* Stagger the content animation for smoother effect */
    .room-inventory.show .inventory-filters {
        transition-delay: 0.1s;
    }
    
    .room-inventory.show .inventory-items {
        transition-delay: 0.15s;
    }
    
    .room-inventory.show .inventory-actions {
        transition-delay: 0.2s;
    }
    
    .room-inventory .inventory-items {
        max-height: calc(32vh - 140px);
        overflow-y: auto;
    }

    /* Ensure inventory items have proper spacing */
    .inventory-item {
        min-height: 60px;
        margin-bottom: 8px;
    }
}

@media (max-width: 768px) {
    .room-container {
        padding: 20px;
    }

    .isometric-room {
        right: 110px;
        transform: scale(0.8);
    }
}